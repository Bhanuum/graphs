void dfs(int node,vector<int>adj[],stack<int>&st,vector<int>&visited)
	{
	    visited[node]=1;
	    for(auto it:adj[node])
	    {
	        if(visited[it]==0)
	        {
	            dfs(it,adj,st,visited);
	        }
	    }
	    st.push(node);
	    
	}
	
	vector<int> topoSort(int v, vector<int> adj[]) 
	{
	   
	    stack<int>st;
	   vector<int>visited(v,0);
	   for(int i=0;i<v;i++)
	   {
	       if(visited[i]==0)
	       {
	           dfs(i,adj,st,visited);
	       }
	   }
	   vector<int>ans;
	   while(!st.empty())
	   {
	       ans.push_back(st.top());
	       st.pop();
	   }
	   return ans;
	}
